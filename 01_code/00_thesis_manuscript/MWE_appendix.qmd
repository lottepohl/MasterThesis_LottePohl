---
title: Vertical movement behaviour of the starry smooth-hound shark *Mustelus asterias* in the North Sea
subtitle: Master Thesis
author:
  - name: Lotte Pohl
    email: lotte.pohl@imbrsea.eu
    affiliations: 
        - id: VLIZ
          name: Flemish Marine Institute
          department: Marine Observation Centre
          address: Slipwaykaai 2
          city: Ostend
          state: Belgium
          postal-code: 8400
        - id: UGent
          name: Ghent University
          department: Marine Biology research group
          address: Krijgslaan 281/S8
          city: Ghent
          state: Belgium
          postal-code: 9000
    attributes:
        corresponding: true
  - name: Niels Brevé
    email: breve@sportvisserijnederland.nl
    affiliations:
      - id: WUR
        name: Wageningen University and Research
        department: Marine Ecology Group
        address: Droevendaalsesteeg 1
        city: Wageningen
        state: The Netherlands
        postal-code: 6700
      - id: Sportvisserij
        name: Sportvisserij Nederlands
        address: Leyenseweg 115
        city: Bilthoven
        state: The Netherlands
        postal-code: 3721
  - name: Carlota Muñiz
    email: carlota.muniz@vliz.be
    affiliations:
        - ref: VLIZ
  - name: Jan Reubens
    email: jan.reubens@vliz.be
    affiliations:
        - ref: VLIZ
abstract: 
 tempor incididunt ut labore et dolore magna  aliqua.
keywords: 
  - acoustic telemetry
  - geolocation modelling
  - Mustelus asterias
date: last-modified
bibliography: My_Collection.bib
execute:
  echo: false
  include: false
knitr:
  opts_knit:
    root.dir: "C:/Users/lotte.pohl/Documents/github_repos/MasterThesis_LottePohl/"
    verbose: TRUE
# output:
#   pdf_document:
#     css: custom.css
#     output_dir: "C:/Users/lotte.pohl/Documents/github_repos/MasterThesis_LottePohl/01_code/00_thesis_manuscript/test"
#     base_url: "http://localhost:3478/01_code/00_thesis_manuscript/test"
format:
  #     - title.tex
  # pdf: default
  # pdf: # bmc template
  #   template: bmc_template/bmc_article.tex
  #   template-partials:
  elsevier-pdf:
    keep-tex: true
    toc: true
    journal:
      #   - Highlight 1
      #   - Highlight 2
      #   - Highlight 3
      # - top=2 0mm
      # - left=20mm
      # - heightrounded
      name: Journal of Animal Biotelemetry
      formatting: review # or preprint, or doubleblind
      linestretch: 2
      model: 3p
      cite-style: numbername
      # graphical-abstract: "![](abstract.png)"
      # highlights:
        
      # fig-width: 6.7
      # fig-height: 4.5
      # geometry:
      # tbl-cap-location: top
editor_options: 
  chunk_output_type: console
header-includes:
  - \newcommand{\mycommand}[1]{\textbf{#1}}
# crossref:
#   fig-title: '**Figure**'
#   fig-labels: arabic
#   title-delim: "**.**"
# quarto:
#   figure:
#     caption:
#       format: "<b>Figure %s.</b> %s"
---

```{r packages}
library(dplyr)
# library(tidyverse)
# library(leaflet)
# library(ggplot2)
library(tibble)
# library(magrittr)
library(knitr)
library(usethis)
library(kableExtra)
library(gridExtra)
# library(biwavelet)
# rm(list = ls())
```

```{r workspace}
# load functions
paste0(getwd(), "/01_code/06_functions/functions.R") %>% base::source()
paste0(getwd(), "/01_code/02_load_data/manuscript_figures/load_tables.R") %>% base::source()

# load plots, data and maps
# paste0(getwd(), "/01_code/02_load_data/manuscript_figures/load_dst_overview_plots.R") %>% base::source()
# 
# paste0(getwd(), "/01_code/02_load_data/manuscript_figures/load_plots.R") %>% base::source()

# paste0(getwd(), "/01_code/02_load_data/manuscript_figures/load_models.R") %>% base::source()

# paste0(getwd(), "/01_code/02_load_data/manuscript_figures/load_maps.R") %>% base::source()

# paste0(getwd(), "/01_code/02_load_data/load_autocorrelation_results.R") %>% base::source()

paste0(getwd(), "/01_code/02_load_data/load_acoustic_detections.R") %>% base::source()

# paste0(getwd(), "/01_code/05_plots_maps/plots_dst_summary.R") %>% base::source()

# paste0(getwd(), "/01_code/05_plots_maps/thesis_manuscript_figures.R") %>% base::source()

# dst_summary <- load_data(filestring = "dst_summary", folder = paste0(getwd(), "/02_results/dst_summary/"))

```

```{r setplottheme}

knitr::opts_chunk$set(warning = FALSE, message = FALSE)

thesis_theme <- ggplot2::theme(
  plot.title = element_text(family = "serif", size = 9, face = "bold"),
  plot.subtitle = element_text(family = "serif", size = 9),
  axis.title = element_text(family = "serif", size = 9),
  axis.text = element_text(family = "serif", size = 7),
  legend.title = element_text(family = "serif", size = 8),
  legend.text = element_text(family = "serif", size = 7),
  legend.key = element_rect(fill = "transparent", colour = "transparent"),
  # legend.key.width = unit(2, "cm"),
  legend.margin = margin(t = -15, b = -10, r = -10, l = -10),
  # plot.background = element_blank()#,
  panel.background = element_blank(),
  plot.tag = element_text(face = "bold", family = "serif", size = 12),
  # plot.tag.position =  c(0.065, 0.96), #"topleft", 
  plot.tag.position =  c(0.01, 0.98), #"topleft", 
  panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
  # panel.background = element_rect(fill = "transparent"),
  panel.grid.major = element_line(color = "gray70", linetype = "solid"),
  panel.grid.minor = element_line(color = "gray90", linetype = "dashed"),
)

# Set the theme as the default for all plots
ggplot2::theme_set(thesis_theme)


thesis_theme_halfpage <- ggplot2::theme(
  plot.title = element_text(family = "serif", size = 11.5, face = "bold"),
  plot.subtitle = element_text(family = "serif", size = 11.5),
  axis.title = element_text(family = "serif", size = 11.5),
  axis.text = element_text(family = "serif", size = 9.5),
  legend.title = element_text(family = "serif", size = 11.5),
  legend.text = element_text(family = "serif", size = 9.5),
  legend.key = element_rect(fill = "transparent", colour = "transparent"),
  # plot.background = element_blank()#,
  panel.background = element_blank(),
  # panel.background = element_rect(fill = "transparent"),
  panel.grid.major = element_line(color = "gray70", linetype = "solid"),
  panel.grid.minor = element_line(color = "gray90", linetype = "dashed"),
)
```

<!-- {{< pagebreak >}} -->

# Abstract

Gathering knowledge on non-commercial, migratory fish species with complex life cycles
is challenging, yet necessary to improve management of such species in
the future [@brownscombe_2022]. Fish with late reproduction and low
offspring numbers such as elasmobranchs are especially vulnerable to
overfishing and require special attention in fisheries management [@stevens_2000].


```{r table-animalinfo}
#| include: true
#| label: tbl-animalinfo
#| out-width: 120%
#| tbl-cap-location: top
#| tbl-cap: "Information on the tagged individuals. Release location 1 refers to Neeltje Jans, release location 2 refers to the outer Western Scheldt. d = days, h = hours, Det. = detected, Loc. = location, RI = Residency Index (days detected / 518 days). The 518 days correspond to the battery life estimated by the tag manufacturer. Days at liberty are the period between release and last detection, or death date from the DST depth log. Recovered tags highlighted in grey."

knitr::kable(x = tagged_animal_info %>% 
               #set column order & order rows
               dplyr::select(tag_serial_number, sex, length1, weight,
                             release_date_time, n_detect, days_detected,
                             hours_detected, date_last_detected, 
                             days_at_liberty, residency_index, release_loc) %>%
               arrange(release_date_time) %>%
               # cs_dt$mpg = cell_spec(cs_dt$mpg, color = ifelse(cs_dt$mpg > 20, "red", "blue"))
               mutate(release_loc = ifelse(release_loc == "Neeltje Jans", 1, 2)
                      ),
             booktabs = T, escape = F,
             col.names = linebreak(c("Tag Serial\nNo.", "Sex", "TL\n in m", "Body Mass\n in kg", "Release\nDate", "Times\nDet.", "d\nDet.","h\nDet.", "Date last\nDet.", "Days at\nLiberty", "RI", "Release\nLoc."), align = rep('c', 12))) %>% 
  kableExtra::row_spec(0, bold = T) %>% #make colnames bold
  row_spec(which(tagged_animal_info$tag_serial_number %in% dst_summary$tag_serial_number), bold = F, color = "black", background = "#E2E2E2") %>%
  # kableExtra::row_spec(bold = ifelse(tag_serial_number %in% dst_summary$tag_serial_number, T, F)) %>%
  # column_spec(1, bold = T) %>% #make 1st cold bold
  kableExtra::kable_styling(position = "center", latex_options = "HOLD_position") %>%  kableExtra::kable_styling(font_size = 7.25)

# knitr::kable(x = tagged_animal_info %>% 
#                #set column order & order rows
#                dplyr::select(tag_serial_number, sex, length1, weight,
#                              release_date_time, n_detect, days_detected,
#                              hours_detected, date_last_detected, 
#                              days_at_liberty, residency_index, release_loc) %>%
#                arrange(release_date_time) %>%
#                mutate(release_loc = ifelse(release_loc == "Neeltje Jans", 1, 2)),
#              booktabs = T, escape = F,
#              col.names = linebreak(c("tag serial\nno.", "sex", "TL\n in m", "bodymass\n in kg", "release\ndate", "times\ndet.", "d\ndet.","h\ndet.", "date last\ndet.", "days at\nliberty", "RI", "release\nloc."), align = "c")) %>%
#   kableExtra::kable_styling(position = "center", latex_options = "HOLD_position") %>%  kableExtra::kable_styling(font_size = 8)
```


